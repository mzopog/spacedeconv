[{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"spacedeconv","dir":"Articles","previous_headings":"","what":"spacedeconv","title":"Getting started","text":"spacedeconv unified interface 31 deconvolution tools focus spatial transcriptomics datasets. total 17 second-generation deconvolution tools included, enabling deconvolution cell types single-cell reference data available. Additionally 10 first-generation tools, focussing deconvolution immune cells, available well 4 first-generation methods optimised mouse data.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Getting started","text":"two ways install spacedeconv: minimal installation installs dependencies required basic functionalities. deconvolution methods need installed -demand. complete installtation installs dependencies including deconvolution methods. may take considerable time. Since dependencies CRAN Bioconductor, spacedeconv available GitHub . recommend installing trough pak package manager:","code":"install.packages(\"pak\")  # minimal installation pak::pkg_install(\"omnideconv/spacedeconv\")  # complete installation, including Python dependencies pak::pkg_install(\"omnideconv/spacedeconv\", dependencies = TRUE) spacedeconv::install_all_python()"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"data-requirements","dir":"Articles","previous_headings":"","what":"Data requirements","title":"Getting started","text":"spacedeconv offers convenient access perform first- second-generation deconvolution spatial transcriptomics datasets. deconvolution can performed directly first-generation methods, second-generation algorithms require additional annotated single-cell reference. SpatialExperiment, deconvoluted SingleCellExperiment (recommended), anndata Seurat containing cell type information can load 10X Visium Data providing spaceranger output folder. possible run spacedeconv manually created SpatialExperiments. See SpatialExperiment Documentation details.","code":"spe <- SpatialExperiment::read10xVisium(\"path_to_directory\")"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"workflow","dir":"Articles","previous_headings":"","what":"Workflow","title":"Getting started","text":"core modules spacedeconv used build reference signature deconvolute spatial transcriptomics data. provide convenient function normalization visualization. full list deconvolution algorithms can accessed spacedeconv::deconvolution_methods FAQ.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"normalization","dir":"Articles","previous_headings":"Workflow","what":"1. Normalization","title":"Getting started","text":"spacedeconv offers function normalize spatial expression data. normalization saved additional assay, make sure use correct data deconvolution providing desired assay parameters assay_sc assay_sp.","code":"spe <- spacedeconv::normalize(spe, method = \"cpm\")  # specify expression assay to use signature <- spacedeconv::build_model(spe,   method = \"quantiseq\",   assay_sp = \"cpm\" )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"building-a-reference-signature","dir":"Articles","previous_headings":"Workflow","what":"2. Building a reference Signature","title":"Getting started","text":"second-generation deconvolution tools require cell-type specific reference signature can calculated build_model() function. build signature annotated single-cell sequencing data required.","code":"signature <- spacedeconv::build_model(   single_cell_object,   cell_type_col = \"celltype_major\",   method = \"spotlight\",   assay_sc = \"cpm\" )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"deconvolution","dir":"Articles","previous_headings":"Workflow","what":"3. Deconvolution","title":"Getting started","text":"function deconvolutes spatial transcriptomics dataset using one spacedeconvs 31 deconvolution tools. Since first-generation deconvolution tools contain predefined expression signatures tools can used directly spatial data. need provide signature case. spacedeconv returns SpatialExperiment object annotated deconvolution results.","code":"# save the results to an annotated SpatialExperiment result <- spacedeconv::deconvolute(   spatial_object,   signature,   method = \"spotlight\" )  # return deconvolution results in table form result <- spacedeconv::deconvolute(   spatial_object,   signature,   method = \"spotlight\",   return_object = FALSE )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv.html","id":"visualization","dir":"Articles","previous_headings":"Workflow","what":"4. Visualization","title":"Getting started","text":"offer 4 visualization function aiming different insight data. full example visualization option available visualization Vignette.","code":"# sample does refer to the first column of ColData(spe) # for cell_type input a celltype present in the deconvolution result spacedeconv::plot_celltype(spe, cell_type = \"spotlight_B.cells\")  # umi count spacedeconv::plot_umi_count(spe)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_data.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Data Input","text":"spacedeconv integrates first- second-generation deconvolution algorithms transcriptome data. first-generation tools deconvolute based internal precomputed signatures, second-generation deconvolution tools compute cell type specific expression signatures annotated single-cell expression data. following requirements workflow details types data explained detail.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_data.html","id":"example-data","dir":"Articles","previous_headings":"","what":"Example Data","title":"Data Input","text":"spacedeconv contains 4 different spatial datasets obtained 10XVisium platform. Additionally 4 matching scRNA-seq datasets available can used calculate custom expression signatures. data can loaded like :","code":"library(spacedeconv) data(\"single_cell_data_1\") data(\"single_cell_data_2\") data(\"single_cell_data_3\") data(\"single_cell_data_4\") data(\"spatial_data_1\") data(\"spatial_data_2\") data(\"spatial_data_3\") data(\"spatial_data_4\")"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_data.html","id":"reference-data","dir":"Articles","previous_headings":"","what":"Reference Data","title":"Data Input","text":"build cell-type specific signatures second-generation deconvolution spacedeconv utilized annotated single-cell reference data. single cell data needs include cell-type annotations can one following formats: SingleCellExperiment (recommended) AnnData Seurat Cell type information needs available. can specify column containing annotation cell_type_col parameter. applies batch ID information required MuSiC, SCDC, BSeq-sc, CDSeq CARD parameter batch_id_col.","code":"signature <- build_model(single_cell_data_1,   method = \"dwls\",   cell_type_col = \"celltype_major\", )  # some methods require batch_id information as well sigature <- build_model(single_cell_data_1,   method = \"scdc\",   cell_type_col = \"celltype_major\",   batch_id_col = \"orig.ident\" )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_data.html","id":"spatial-data","dir":"Articles","previous_headings":"","what":"Spatial Data","title":"Data Input","text":"Spatially resolved data needs available SpatialExperiment format. 10XVisium slides data can loaded easily providing path data folder. information data loading manual object construction can found SpatialExperiment Vignette. Spatial data available Seurat Object can converted SpatialExperiment:","code":"spe <- SpatialExperiment::read10xVisium(path_to_directory) spe <- seurat_to_spatialexperiment(seurat_object)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_data.html","id":"normalization","dir":"Articles","previous_headings":"","what":"Normalization","title":"Data Input","text":"SpaceDeconv offers additional function convenient normalization SpatialExperiments. normalization saved new assay, make sure correct data used deconvolution providing desired assay parameters assay_sc assay_sp. normalization method cpm logcpm available.","code":"spe <- normalize(spe, method = \"cpm\")  # make sure to use cpm assay in deconvolution step deconvolution <- deconvolute(spe, method = \"quantiseq\", assay_sp = \"cpm\")"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_data.html","id":"image-alignment","dir":"Articles","previous_headings":"","what":"Image Alignment","title":"Data Input","text":"case background image aligned properly SpatialExperiment class offers convenient functions rotation / mirroring: rotateImg(image, degrees) mirrorImg(image, axis) # 'h'/'v' Information available SpatialExperiment Documentation","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_example.html","id":"sample-data","dir":"Articles","previous_headings":"","what":"Sample Data","title":"Example","text":"tutorial use one spacedeconvs sample dataset deconvolution algorithm “SCDC”.","code":"library(spacedeconv) library(SpatialExperiment)  data(\"single_cell_data_3\") data(\"spatial_data_3\")"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_example.html","id":"preprocessing-and-normalization","dir":"Articles","previous_headings":"","what":"Preprocessing and Normalization","title":"Example","text":"get first insight data type dataset name terminal: can see single-cell data form SingleCellExperiment. total dataset includes expression values 29733 genes 7986 cells. can seen cell type information available colData cell related annotation stored. next step normalize data cpm (“Counts Per Million”) access object can see normalization added object additional assay called \"cpm\".","code":"single_cell_data_3 #> class: SingleCellExperiment  #> dim: 29733 7986  #> metadata(1): Samples #> assays(1): counts #> rownames(29733): RP11-34P13.7 FO538757.3 ... KRTAP9-2 IGLVIV-66-1 #> rowData names(1): ID #> colnames(7986): CID44971_AAGCCGCCACGCATCG CID44971_AAGGAGCTCAACACAC ... #>   CID44971_TTTCCTCCAAGCCATT CID44971_TTTGGTTGTATCACCA #> colData names(10): Sample Barcode ... celltype_minor celltype_major #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0): single_cell_data_3 <- spacedeconv::normalize(single_cell_data_3, method = \"cpm\") #> Normalized object using cpm. Note that the normalization is saved in an additional assay. spatial_data_3 <- spacedeconv::normalize(spatial_data_3, method = \"cpm\") #> removing 5 spots with zero expression #> Normalized object using cpm. Note that the normalization is saved in an additional assay. single_cell_data_3 #> class: SingleCellExperiment  #> dim: 29733 7986  #> metadata(1): Samples #> assays(2): counts cpm #> rownames(29733): RP11-34P13.7 FO538757.3 ... KRTAP9-2 IGLVIV-66-1 #> rowData names(1): ID #> colnames(7986): CID44971_AAGCCGCCACGCATCG CID44971_AAGGAGCTCAACACAC ... #>   CID44971_TTTCCTCCAAGCCATT CID44971_TTTGGTTGTATCACCA #> colData names(10): Sample Barcode ... celltype_minor celltype_major #> reducedDimNames(0): #> mainExpName: NULL #> altExpNames(0):"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_example.html","id":"build-model","dir":"Articles","previous_headings":"","what":"Build Model","title":"Example","text":"build model need provide single cell expression object annotated cell type information. Let’s look object see annotation available. three columns cell_type information. inspect columns decide one going use signature calculation. three different resolutions cell type annotation available. tutorial choose \"celltype_major\" cell type annotation. Next can calculate model using annotated single-data deconvolution tool “SCDC”.","code":"names(colData(single_cell_data_3)) #>  [1] \"Sample\"          \"Barcode\"         \"orig.ident\"      \"nCount_RNA\"      #>  [5] \"nFeature_RNA\"    \"percent.mito\"    \"subtype\"         \"celltype_subset\" #>  [9] \"celltype_minor\"  \"celltype_major\" # celtype_subset unique(colData(single_cell_data_3)$celltype_subset) #>  [1] \"Endothelial ACKR1\"              \"Endothelial RGS5\"               #>  [3] \"Endothelial CXCL12\"             \"CAFs MSC iCAF-like s1\"          #>  [5] \"CAFs MSC iCAF-like s2\"          \"CAFs Transitioning s3\"          #>  [7] \"CAFs myCAF like s4\"             \"CAFs myCAF like s5\"             #>  [9] \"PVL Differentiated s3\"          \"PVL_Immature s2\"                #> [11] \"PVL Immature s1\"                \"Endothelial Lymphatic LYVE1\"    #> [13] \"B cells Memory\"                 \"B cells Naive\"                  #> [15] \"Plasmablasts\"                   \"T_cells_c4_CD8+_ZFP36\"          #> [17] \"T_cells_c6_IFIT1\"               \"T_cells_c5_CD8+_GZMK\"           #> [19] \"T_cells_c7_CD8+_IFNG\"           \"T_cells_c8_CD8+_LAG3\"           #> [21] \"T_cells_c0_CD4+_CCR7\"           \"T_cells_c1_CD4+_IL7R\"           #> [23] \"T_cells_c2_CD4+_T-regs_FOXP3\"   \"T_cells_c3_CD4+_Tfh_CXCL13\"     #> [25] \"T_cells_c9_NK_cells_AREG\"       \"T_cells_c11_MKI67\"              #> [27] \"T_cells_c10_NKT_cells_FCGR3A\"   \"Myeloid_c10_Macrophage_1_EGR1\"  #> [29] \"Myeloid_c12_Monocyte_1_IL1B\"    \"Myeloid_c2_LAM2_APOE\"           #> [31] \"Myeloid_c1_LAM1_FABP5\"          \"Myeloid_c8_Monocyte_2_S100A9\"   #> [33] \"Myeloid_c7_Monocyte_3_FCGR3A\"   \"Myeloid_c9_Macrophage_2_CXCL10\" #> [35] \"Cycling_Myeloid\"                \"Myeloid_c11_cDC2_CD1C\"          #> [37] \"Myeloid_c4_DCs_pDC_IRF7\"        \"Myeloid_c3_cDC1_CLEC9A\"         #> [39] \"Myeloid_c0_DC_LAMP3\"            \"Cancer LumB SC\"                 #> [41] \"Cancer Cycling\"                 \"Cancer Basal SC\"                #> [43] \"Cancer Her2 SC\"                 \"Myoepithelial\"                  #> [45] \"Luminal Progenitors\"            \"Mature Luminal\"  # celltype_minor unique(colData(single_cell_data_3)$celltype_minor) #>  [1] \"Endothelial ACKR1\"           \"Endothelial RGS5\"            #>  [3] \"Endothelial CXCL12\"          \"CAFs MSC iCAF-like\"          #>  [5] \"CAFs myCAF-like\"             \"PVL Differentiated\"          #>  [7] \"PVL Immature\"                \"Endothelial Lymphatic LYVE1\" #>  [9] \"B cells Memory\"              \"B cells Naive\"               #> [11] \"Plasmablasts\"                \"T cells CD8+\"                #> [13] \"T cells CD4+\"                \"NK cells\"                    #> [15] \"Cycling T-cells\"             \"NKT cells\"                   #> [17] \"Macrophage\"                  \"Monocyte\"                    #> [19] \"Cycling_Myeloid\"             \"DCs\"                         #> [21] \"Cancer LumB SC\"              \"Cancer Cycling\"              #> [23] \"Cancer Basal SC\"             \"Cancer Her2 SC\"              #> [25] \"Myoepithelial\"               \"Luminal Progenitors\"         #> [27] \"Mature Luminal\"  # celltype_major unique(colData(single_cell_data_3)$celltype_major) #> [1] \"Endothelial\"       \"CAFs\"              \"PVL\"               #> [4] \"B-cells\"           \"Plasmablasts\"      \"T-cells\"           #> [7] \"Myeloid\"           \"Cancer Epithelial\" \"Normal Epithelial\" signature <- spacedeconv::build_model(   single_cell_obj = single_cell_data_3,   cell_type_col = \"celltype_major\",   method = \"scdc\",   spatial_obj = spatial_data_3,   assay_sc = \"cpm\",   assay_sp = \"cpm\",   batch_id_col = \"orig.ident\" ) knitr::kable(round(signature[1:10, ], 4))"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_example.html","id":"deconvolution","dir":"Articles","previous_headings":"","what":"Deconvolution","title":"Example","text":"","code":"deconv <- spacedeconv::deconvolute(   spatial_data_3,   signature = signature,   method = \"scdc\",   assay_sp = \"cpm\",   single_cell_obj = single_cell_data_3,   cell_type_col = \"celltype_minor\",   batch_id_col = \"orig.ident\" )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_example.html","id":"visualization","dir":"Articles","previous_headings":"","what":"Visualization","title":"Example","text":"deconvolution results stored spatial object simplify visualizations. spacedeconv offers 6 visualization functions different scopes, explained visualization vignette. can see available deconvolution results using available_results(deconv) accessing objects colData: Spot estimated cell fraction available object annotation can used visualizations.","code":"available_results(deconv) #>  [1] \"scdc_B.cells.Memory\"              \"scdc_B.cells.Naive\"               #>  [3] \"scdc_CAFs.MSC.iCAF.like\"          \"scdc_CAFs.myCAF.like\"             #>  [5] \"scdc_Cancer.Basal.SC\"             \"scdc_Cancer.Cycling\"              #>  [7] \"scdc_Cancer.Her2.SC\"              \"scdc_Cancer.LumB.SC\"              #>  [9] \"scdc_Cycling.T.cells\"             \"scdc_Cycling_Myeloid\"             #> [11] \"scdc_DCs\"                         \"scdc_Endothelial.ACKR1\"           #> [13] \"scdc_Endothelial.CXCL12\"          \"scdc_Endothelial.Lymphatic.LYVE1\" #> [15] \"scdc_Endothelial.RGS5\"            \"scdc_Luminal.Progenitors\"         #> [17] \"scdc_Macrophage\"                  \"scdc_Mature.Luminal\"              #> [19] \"scdc_Monocyte\"                    \"scdc_Myoepithelial\"               #> [21] \"scdc_NK.cells\"                    \"scdc_NKT.cells\"                   #> [23] \"scdc_Plasmablasts\"                \"scdc_PVL.Differentiated\"          #> [25] \"scdc_PVL.Immature\"                \"scdc_T.cells.CD4.\"                #> [27] \"scdc_T.cells.CD8.\" spacedeconv::plot_celltype(deconv,   cell_type = \"scdc_B.cells.Memory\",   smooth = TRUE,   density = FALSE ) #> Registered S3 methods overwritten by 'proxy': #>   method               from     #>   print.registry_field registry #>   print.registry_entry registry"},{"path":[]},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"my-spatialexperiment-contains-ensembl-ids--can-i-still-perform-deconvolution","dir":"Articles","previous_headings":"FAQ","what":"My SpatialExperiment contains ENSEMBL IDs. Can i still perform deconvolution?","title":"spacedeconv FAQ","text":"possible perform second-generation deconvolution algorithms annotated scRNA-seq data containing ENSEMBL IDs available. first-gen deconvolution tools require HGNC symbols. may also check SpatialExperiment rowData() available annotation overwrite ENSEMBL IDs.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"how-can-i-see-which-deconvolution-results-are-available-in-my-object","dir":"Articles","previous_headings":"FAQ","what":"How can i see which deconvolution results are available in my object?","title":"spacedeconv FAQ","text":"can use available_results(object) access names(colData(object)) see deconvolution results available.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"the-spacedeconv-plots-contain-a-lot-of-white-spots","dir":"Articles","previous_headings":"FAQ","what":"The spacedeconv plots contain a lot of white spots","title":"spacedeconv FAQ","text":"reading raw spatial data SpatialExperiment contains expression information spots, even located tissue. Remove spots following code","code":"spe <- spe[, colData(spe)$in_tissue == TRUE]"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"the-visium-slide-and-the-spatial-data-are-not-rotated-in-the-same-direction","dir":"Articles","previous_headings":"FAQ","what":"The Visium Slide and the spatial data are not rotated in the same direction","title":"spacedeconv FAQ","text":"SpatialExperiment wrapper includes function rotate/mirror image. information can found Visualization Vignette SpatialExperiment Documentation.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"the-hexagons-in-my-plots-are-rotated-and-dont-give-an-even-appearance","dir":"Articles","previous_headings":"FAQ","what":"The hexagons in my plots are rotated and don’t give an even appearance","title":"spacedeconv FAQ","text":"Visium slide might aligned incorrectly. Try rotating image use offset_rotation=TRUE parameter plotting function.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"which-deconvolution-tools-are-available","dir":"Articles","previous_headings":"FAQ","what":"Which deconvolution tools are available?","title":"spacedeconv FAQ","text":"list includes methods name internally used tokens. detailed descriptions method can found end vignette.","code":"spacedeconv::deconvolution_methods ##             RCTD        SPOTlight             CARD      spatialDWLS  ##           \"rctd\"      \"spotlight\"           \"card\"    \"spatialdwls\"  ##    cell2location        AutoGeneS       BayesPrism           Bisque  ##  \"cell2location\"      \"autogenes\"     \"bayesprism\"         \"bisque\"  ##          BSeq-sc       CIBERSORTx            CDSeq              CPM  ##         \"bseqsc\"     \"cibersortx\"          \"cdseq\"            \"cpm\"  ##             DWLS             MOMF            MuSiC           Scaden  ##           \"dwls\"           \"momf\"          \"music\"         \"scaden\"  ##             SCDC       MCPcounter             EPIC        quanTIseq  ##           \"scdc\"    \"mcp_counter\"           \"epic\"      \"quantiseq\"  ##            xCell        CIBERSORT CIBERSORT (abs.)            TIMER  ##          \"xcell\"      \"cibersort\"  \"cibersort_abs\"          \"timer\"  ##     ConsensusTME             ABIS         ESTIMATE      mMCPcounter  ##  \"consensus_tme\"           \"abis\"       \"estimate\"   \"mmcp_counter\"  ##        seqImmuCC              DCQ             BASE  ##      \"seqimmucc\"            \"dcq\"           \"base\""},{"path":[]},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"autogenes","dir":"Articles","previous_headings":"Method recommendations and running times","what":"AutoGeneS","title":"spacedeconv FAQ","text":"AutoGeneS (Aliee Theis 2020) selects marker genes based multi-objective optimization simultaneously minimizes correlation maximizes distance cell-type signatures. Compared approaches selecting genes differential expression performs favorably respect closely related cell-types. resulting signature matrix can combined different regression models ---box, including 𝜈-support vector regression (SVR).","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"bisque","dir":"Articles","previous_headings":"Method recommendations and running times","what":"Bisque","title":"spacedeconv FAQ","text":"Bisque (Jew et al. 2020) takes advantage matched bulk scRNA-seq samples improve accuracy cell-type estimates. Using linear regression, corrects platform-specific biases pseudo-bulk reference profiles derived scRNA-seq bulk RNA-seq samples. applies NNLS-regression deconvolute bulk RNA-seq samples.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"bseq-sc","dir":"Articles","previous_headings":"Method recommendations and running times","what":"BSeq-sc","title":"spacedeconv FAQ","text":"Bseq-SC (Baron et al. 2016) builds signature matrices averaging manually defined list marker genes across cell-type-specific single-cell gene expression profiles. leverages CIBERSORT algorithm(Newman et al., 2015) perform deconvolution.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"cdseq","dir":"Articles","previous_headings":"Method recommendations and running times","what":"CDSeq","title":"spacedeconv FAQ","text":"“present R implementation CDSeq (CDSeqR) significant performance improvement original implementation MATLAB added new function aid cell type annotation. developed novel strategy substantially improve computational efficiency speed memory usage. addition, designed implemented new function annotating CDSeq estimated cell types using single-cell RNA sequencing (scRNA-seq) data. function allows users readily interpret visualize CDSeq estimated cell types. addition, new function allows users annotate CDSeq-estimated cell types using marker genes.” CDSeqR paper (Kang et al. 2021). Note: performs also complete deconvolution.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"cibersortx","dir":"Articles","previous_headings":"Method recommendations and running times","what":"CIBERSORTx","title":"spacedeconv FAQ","text":"CIBERSORTx (. M. Newman et al. 2019) extension original CIBERSORT algorithm (. M. et al. Newman 2015) enables building signature matrices scRNA-seq sorted bulk RNA-seq samples based differential gene expression analysis. address technical biases introduce two batch correction methods, one designed mitigate batch effects datasets, address differences sequencing protocols (e.g. 10x vs. full-length). Moreover, CIBERSORTx supports “complete” deconvolution, yielding cell-type proportions disentangling bulk gene expression profiles cell-type specific expression profiles.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"cpm","dir":"Articles","previous_headings":"Method recommendations and running times","what":"CPM","title":"spacedeconv FAQ","text":"Cell Population Mapping (CPM) (Frishberg et al. 2019) works independent discrete cell-types. Instead building cell-type specific signature matrix, directly uses single-cell gene expression reference performs linear SVR predict relative abundances cell-states organized continuous 1-dimensional manifold 2-dimensional space. increase robustness, results averaged independent predictions random subsets single-cell RNA-seq dataset smoothed neighborhood 10 nearest reference cells.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"dwls","dir":"Articles","previous_headings":"Method recommendations and running times","what":"DWLS","title":"spacedeconv FAQ","text":"Tsoucas et al. introduce dampened weighted least squares (DWLS)-regression (Tsoucas et al. 2019), improves ordinary least squares regression 𝜈-SVR attributes higher weight rare cell types marker genes low average expression level. show method achieves favorable performance estimating abundance infrequent cell-types.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"momf","dir":"Articles","previous_headings":"Method recommendations and running times","what":"MOMF","title":"spacedeconv FAQ","text":"MOMF (Sun, Sun, Yang 2019), Multi-Omics Matrix Factorization, models cell type specific mean scRNA-seq data also accounting uncertainty cell type specific mean gene expression levels. Alternating Direction Method Multipliers algorithm used estimate parameters bulk RNA-seq downstream analyses.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"music","dir":"Articles","previous_headings":"Method recommendations and running times","what":"MuSiC","title":"spacedeconv FAQ","text":"MuSiC (Wang et al. 2019) pre-select marker genes rather weights marker genes low high variance subjects. performs non-negative least squares (NNLS)-regression obtain cell-type estimates. improve performance closely related cell-types MuSiC incorporates hierarchical information unsupervised clustering: first deconvolves gene expression profile coarse cell-type clusters subsequently uses specific marker genes estimate subtypes within clusters. recent extension MuSiC framework(Sosina et al., n.d.) addresses different mRNA contents different cell-types, enabling MuSiC generate absolute scores can compared samples cell-types.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"scaden","dir":"Articles","previous_headings":"Method recommendations and running times","what":"Scaden","title":"spacedeconv FAQ","text":"Scaden (Menden et al. 2020) leverages deep neural network (DNN) estimating cell-type proportions. Instead explicitly building signature matrix, DNN implicitly learns features important certain cell type. DNN trained simulating bulk RNA-seq samples known cell-type proportions scRNA-seq datasets. increase robustness, training process allows flexibly integrate multiple scRNA-seq datasets , optionally, bulk RNA-seq samples “gold standard” measurements FACS.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"scdc","dir":"Articles","previous_headings":"Method recommendations and running times","what":"SCDC","title":"spacedeconv FAQ","text":"SCDC (Dong et al. 2020) extension MuSiC framework(Wang et al., 2019). adds additional scaling step -weight impact aberrant genes prediction filtering strategy misclassified cells doublets. importantly, adds Ensemble layer allowing combined prediction multiple, independent scRNA-seq datasets. latter implicitly addresses batch effects datasets shown improve robustness overall performance.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_faq.html","id":"running-times","dir":"Articles","previous_headings":"Method recommendations and running times","what":"Running Times","title":"spacedeconv FAQ","text":"example method deconvoluted sample dataset ending “_1”. running times can used select suitable deconvolution methods.","code":""},{"path":[]},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"available-visualizations","dir":"Articles","previous_headings":"","what":"Available Visualizations","title":"spacedeconv Visualization","text":"moment spacedeconv offers two visualization functions. plot_celltype() visualizes spatial image color coded cell type fractions one cell type. plot_cells_per_spot() shows color coded distribution number detected cell types spot. plot can additionally rendered bar chart. plot_umi_count() Plots number sequenced reads per spot plot_most_abundant() Render plot containing abundant cell-type spot plot_celltype_presence() Plot presence (thresholded) single cell-type. plot_comparison() Plot comparison two cell-type fractions","code":""},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"plot_celltype","dir":"Articles","previous_headings":"Available Visualizations","what":"1. plot_celltype()","title":"spacedeconv Visualization","text":"Plot spot annotation continuous discrete scale. spot annotation needs colData(spe), manual annotation can added SpatialExperiment object visualization.","code":"spacedeconv::plot_celltype(deconv, cell_type = \"epic_B.cell\", density = F)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"plot_cells_per_spot","dir":"Articles","previous_headings":"Available Visualizations","what":"2. plot_cells_per_spot()","title":"spacedeconv Visualization","text":"render distribution number detected cell types per spot user-selected threshold required well deconvolution result. cell fraction threshold marked “detected”. example set treshold 5%.","code":"spacedeconv::plot_cells_per_spot(deconv, threshold = 0.05, density = F)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"plot_umi_count","dir":"Articles","previous_headings":"Available Visualizations","what":"3. plot_umi_count()","title":"spacedeconv Visualization","text":"plot shows number detected UMIs spot. recommend rendering plot transform_scale = \"sqrt\" due large range UMI count values.","code":"spacedeconv::plot_umi_count(deconv, transform_scale = \"sqrt\", density = F)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"plot_most_abundant","dir":"Articles","previous_headings":"Available Visualizations","what":"4. plot_most_abundant()","title":"spacedeconv Visualization","text":"plots displays abundant cell-type spot. can specify cells plot either one following: cell_type vector celltypes plot method plotting cell types provided method remove vector celltypes removed plot","code":"spacedeconv::plot_most_abundant(deconv,   method = \"epic\",   density = F,   title_size = 25,   legend_size = 15,   font_size = 10,   remove = c(\"epic_uncharacterized.cell\") )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"plot_celltype_presence","dir":"Articles","previous_headings":"Available Visualizations","what":"5. plot_celltype_presence()","title":"spacedeconv Visualization","text":"access presence single cell-type use thresholded plot_celltype_presence() function. deconvolution result larger provided threshold spot marked detected (“TRUE”).","code":"spacedeconv::plot_celltype_presence(deconv,   cell_type = \"epic_B.cell\",   threshold = 0.05,   palette = \"Red-Blue\",   reverse_palette = T )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"plot_comparison","dir":"Articles","previous_headings":"Available Visualizations","what":"6. plot_comparison()","title":"spacedeconv Visualization","text":"Use function plot ratio deconvolution results two cell-types.","code":"spacedeconv::plot_comparison(deconv,   cell_type_1 = \"epic_T.cell.CD4.\",   cell_type_2 = \"epic_T.cell.CD8.\",   palette = \"Blue-Red\",   density = F )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"color-palette","dir":"Articles","previous_headings":"","what":"Color Palette","title":"spacedeconv Visualization","text":"palettes colorspace R Package can used.","code":"colorspace::hcl_palettes(plot = TRUE)"},{"path":[]},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"image-alignment-offset","dir":"Articles","previous_headings":"Further plot adjustments","what":"Image Alignment Offset","title":"spacedeconv Visualization","text":"spacedeconvs Visualization function designed work data SpaceRanger >= V2.0. Since Version image rotated default hourglass fiducial upper left corner. Previous SpaceRanger results can rotated differently. rotation additionally reflects angle spots slide. Uncorrectly rotated images result hexagons rotated 30 degrees. compensate can use offset_rotation parameter correct hexagon alignment. necessary Visium slides hourglass fiducial bottom left upper right corner.","code":"plot_umi_count(deconv, offset_rotation = T) # rotate hexagons"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"transform-scale","dir":"Articles","previous_headings":"Further plot adjustments","what":"Transform Scale","title":"spacedeconv Visualization","text":"transform_scale parameter colorspace scale can modified. Available options : “ln”, “log10”, “log2” “sqrt”. Scaling color range differently can aid interpreting plot. Please mind plot show valid deconvolution results anymore handled caution.","code":"spacedeconv::plot_umi_count(deconv, transform_scale = \"sqrt\", density = FALSE)"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"smooth","dir":"Articles","previous_headings":"Further plot adjustments","what":"Smooth","title":"spacedeconv Visualization","text":"parameter expression values can smoothed simplify pattern recognition. smoother utilizes linear kernel size calculated multiplying spot distance smoothing factor. smooth=T enable smoothing smoothing_factor choose kernel size (factor spot distance)","code":"spacedeconv::plot_celltype(deconv,   cell_type = \"epic_B.cell\",   smooth = T,   smoothing_factor = 1.5,   density = FALSE )"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"density-distribution","dir":"Articles","previous_headings":"Further plot adjustments","what":"Density Distribution","title":"spacedeconv Visualization","text":"can add density distribution setting density = TRUE.","code":"spacedeconv::plot_celltype(deconv,   cell_type = \"epic_B.cell\",   smooth = TRUE,   density = TRUE,   title_size = 20,   legend_size = 15,   font_size = 10 ) ## Picking joint bandwidth of 0.00218"},{"path":"https://omnideconv.github.io/spacedeconv/articles/spacedeconv_visualization.html","id":"additional-parameters","dir":"Articles","previous_headings":"","what":"Additional Parameters","title":"spacedeconv Visualization","text":"show_image logical, show remove spatial image spot_size integer, increase (>1) decrease (<1) hexagon size limits vector containing upper lower limits color scale palette_type “discrete”, “sequential” “divergent”, scale color´ reverse_palette reverse color palette font_size font size legend title_size font size title legend_size legend","code":""},{"path":"https://omnideconv.github.io/spacedeconv/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Constantin Zackl. Author, maintainer.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zackl C (2022). spacedeconv: Unified Interface spatial transcriptomics deconvolution tools. R package version 0.0.1.0000.","code":"@Manual{,   title = {spacedeconv: Unified Interface to spatial transcriptomics deconvolution tools},   author = {Constantin Zackl},   year = {2022},   note = {R package version 0.0.1.0000}, }"},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"spacedeconv","dir":"","previous_headings":"","what":"Unified Interface to spatial transcriptomics deconvolution tools","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"spacedeconv unified interface 31 deconvolution tools focus spatial transcriptomics datasets. total 17 second-generation deconvolution tools included, enabling deconvolution cell types single-cell reference data available. Additionally 10 first-generation tools, focusing deconvolution immune cells, available well 4 first-generation methods optimised mouse data.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"two ways install spacedeconv: minimal installation installs dependencies required basic functionalities. deconvolution methods need installed -demand. complete installation installs dependencies including deconvolution methods. may take considerable time. Since dependencies CRAN Bioconductor, spacedeconvis available GitHub . recommend installing trough pak package manager:","code":"# install the pak package manager install.packages(\"pak\")  # minimal installation pak::pkg_install(\"omnideconv/spacedeconv\")  # complete installation, including Python dependencies pak::pkg_install(\"omnideconv/spacedeconv\", dependencies=TRUE) # spacedeconv::install_all_python()"},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"spacedeconv offers convenient access perform first- second-generation deconvolution spatial transcriptomics datasets. deconvolution can performed directly first-generation methods, second-generation algorithms require additional annotated single-cell reference. full list deconvolution tools can accessed spacedeconv::deconvolution_algorithms FAQ.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"data-requirements","dir":"","previous_headings":"Usage","what":"Data requirements","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"SpatialExperiment, deconvoluted SingleCellExperiment (recommended), anndata Seurat containing cell type information main functions spacedeconv used build signature matrix annotated single-cell transcriptomics data deconvolute spatially resolved transcriptomics datasets. basic workflow consists :","code":""},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"id_1-build-a-signature-matrix","dir":"","previous_headings":"Usage","what":"1. Build a Signature Matrix","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"Build cell type specific signature matrix annotated single-cell reference data.","code":"signature <- spacedeconv::build_model(   single_cell_object,   cell_type_col = \"celltype_major\",   method = \"spotlight\",   assay_sc=\"cpm\" )"},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"id_2-deconvolution","dir":"","previous_headings":"Usage","what":"2. Deconvolution","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"perform deconvolution SpatialExperiment object required. methods additionally require cell-type specific reference signature can calculated spacedeconv::build_model(). default deconvolution results added SpatialExperiment object simplify visualization. can obtain results table form setting return_object=FALSE.","code":"# save the results to an annotated SpatialExperiment result <- spacedeconv::deconvolute(   spatial_object,   signature,   method = \"spotlight\" )"},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"id_3-visualization","dir":"","previous_headings":"Usage","what":"3. Visualization","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"spacedeconv includes multiple visualization functions. full explanation visualization options can found vignette.","code":"# sample does refer to the first column of ColData(spe) # for cell_type input a celltype present in the deconvolution result plot_celltype(spe, cell_type=\"spotlight_B.cells\")"},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"additional-requirements","dir":"","previous_headings":"","what":"Additional Requirements","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"methods require additional software/tokens, exceptions: working version Docker required CIBERSORTx token CIBERSORTx required website: https://cibersortx.stanford.edu/ CIBERSORT source code required BSeq-sc (see tutorial ?omnideconv::bseqsc_config) SpatialExperiment requires magick installed: sudo apt-get install libmagick++-dev","code":""},{"path":"https://omnideconv.github.io/spacedeconv/index.html","id":"available-methods-licenses-citations","dir":"","previous_headings":"","what":"Available methods, Licenses, Citations","title":"Unified Interface to spatial transcriptomics deconvolution tools","text":"Note , spacedeconv free (GPL 3.0), may need obtain license use individual methods. See table information. use package work, please cite package method(s) using.","code":""},{"path":[]},{"path":"https://omnideconv.github.io/spacedeconv/reference/addResultToObject.html","id":null,"dir":"Reference","previous_headings":"","what":"Add results to object colData — addResultToObject","title":"Add results to object colData — addResultToObject","text":"Add results object colData","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/addResultToObject.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add results to object colData — addResultToObject","text":"","code":"addResultToObject(spatial_obj, result)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/addResultToObject.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add results to object colData — addResultToObject","text":"spatial_obj SpatialExperiment result deconvolution result, rows = spots, columns = cell types","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_checkload.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if anndata package is loaded — anndata_checkload","title":"Checks if anndata package is loaded — anndata_checkload","text":"called python environment set , realized. Else, checks anndata package loaded, , .","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_checkload.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if anndata package is loaded — anndata_checkload","text":"","code":"anndata_checkload()"},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_to_singlecellexperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert AnnData to SingleCellExperiment — anndata_to_singlecellexperiment","title":"Convert AnnData to SingleCellExperiment — anndata_to_singlecellexperiment","text":"Convert AnnData SingleCellExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_to_singlecellexperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert AnnData to SingleCellExperiment — anndata_to_singlecellexperiment","text":"","code":"anndata_to_singlecellexperiment(ad)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_to_singlecellexperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert AnnData to SingleCellExperiment — anndata_to_singlecellexperiment","text":"ad AnnData object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_to_singlecellexperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert AnnData to SingleCellExperiment — anndata_to_singlecellexperiment","text":"SingleCellObject Thanks Omnideconv","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_to_spatialexperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert SpatialExperiment to AnnData — anndata_to_spatialexperiment","title":"Convert SpatialExperiment to AnnData — anndata_to_spatialexperiment","text":"Convert SpatialExperiment AnnData","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/anndata_to_spatialexperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert SpatialExperiment to AnnData — anndata_to_spatialexperiment","text":"","code":"anndata_to_spatialexperiment()"},{"path":"https://omnideconv.github.io/spacedeconv/reference/attachToken.html","id":null,"dir":"Reference","previous_headings":"","what":"Attach method token to deconvolution result — attachToken","title":"Attach method token to deconvolution result — attachToken","text":"Rename Celltypes deconvolution result add method token","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/attachToken.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Attach method token to deconvolution result — attachToken","text":"","code":"attachToken(deconvolution, token = \"deconv\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/attachToken.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Attach method token to deconvolution result — attachToken","text":"deconvolution deconvolution result matrix token method name custom token","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/attachToken.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Attach method token to deconvolution result — attachToken","text":"deconvolution result renamed celltypes","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/available_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Check wich deconvolutionr results are available in a SpatialExperiment object — available_results","title":"Check wich deconvolutionr results are available in a SpatialExperiment object — available_results","text":"Check wich deconvolutionr results available SpatialExperiment object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/available_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check wich deconvolutionr results are available in a SpatialExperiment object — available_results","text":"","code":"available_results(deconv)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/available_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check wich deconvolutionr results are available in a SpatialExperiment object — available_results","text":"deconv SpatialExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_and_deconvolute.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Model and Deconvolute in one step — build_and_deconvolute","title":"Build Model and Deconvolute in one step — build_and_deconvolute","text":"Build Model Deconvolute one step","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_and_deconvolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Model and Deconvolute in one step — build_and_deconvolute","text":"","code":"build_and_deconvolute(   single_cell_obj,   spatial_obj,   method = NULL,   cell_type_col = \"cell_ontology_class\",   batch_id_col = NULL,   assay_sc = \"counts\",   assay_sp = \"counts\",   return_object = TRUE,   verbose = FALSE,   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_and_deconvolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Model and Deconvolute in one step — build_and_deconvolute","text":"single_cell_obj Single Cell Object containing reference data build model spatial_obj SpatialExperiment deconvoluted method deconvolution method cell_type_col column single_cell_obj containing cell type information batch_id_col column SpatialObject containing batch_id information assay_sc assay single cell object use, default = \"counts\" assay_sp assay spatialExperiment use, default = \"counts\" return_object true return anotation spatialExperiment, false return table verbose output information ... parameters passed selected function","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model.html","id":null,"dir":"Reference","previous_headings":"","what":"Build a reference signature — build_model","title":"Build a reference signature — build_model","text":"Build_model calculates reference signature annotated scRNA-seq expression data","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build a reference signature — build_model","text":"","code":"build_model(   single_cell_obj,   cell_type_col = \"cell_ontology_class\",   method = NULL,   verbose = FALSE,   spatial_obj = NULL,   batch_id_col = NULL,   assay_sc = \"counts\",   assay_sp = \"counts\",   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build a reference signature — build_model","text":"single_cell_obj Single-cell Object cell_type_col Name annotation column containing cell type information method Signature calculation Algorithm verbose Display information console spatial_obj SpatialExperiment, required SPOTlight batch_id_col column singleCellExperiment containing batch ids assay_sc assay single cell object use assay_sp assay spatial object use ... additional parameters passed functions","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build a reference signature — build_model","text":"cell-type specific expression signature","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Build a reference signature — build_model","text":"","code":"# more examples can be found in the documentation website data(\"single_cell_data_2\")  single_cell_data_2 <- spacedeconv::normalize(single_cell_data_2, method = \"cpm\") #> Normalized object using cpm. Note that the normalization is saved in an additional assay.  signature <- spacedeconv::build_model(   single_cell_data_2,   method = \"autogenes\",   cell_type_col = \"celltype_major\",   assay_sc = \"cpm\" ) #> standard was chosen because multiple values were supplied for \"mode\" #> Setting up python environment.. #> Note: using the 'X' assay as the X matrix"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_card.html","id":null,"dir":"Reference","previous_headings":"","what":"No signature calculated, just call the deconvolute method — build_model_card","title":"No signature calculated, just call the deconvolute method — build_model_card","text":"signature calculated, just call deconvolute method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_card.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No signature calculated, just call the deconvolute method — build_model_card","text":"","code":"build_model_card()"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_cell2location.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Model Cell2location — build_model_cell2location","title":"Build Model Cell2location — build_model_cell2location","text":"Build Model Cell2location","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_cell2location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Model Cell2location — build_model_cell2location","text":"","code":"build_model_cell2location(   single_cell_obj,   epochs = 20,   cell_count_cutoff = 5,   cell_percentage_cutoff = 0.03,   nonz_mean_cutoff = 1.12 )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_cell2location.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Model Cell2location — build_model_cell2location","text":"single_cell_obj SingleCellExperiment containing reference expression epochs number epochs train network cell_count_cutoff cell2location parameter cell_percentage_cutoff cell2location parameter nonz_mean_cutoff cell2location parameter","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_immunedeconv.html","id":null,"dir":"Reference","previous_headings":"","what":"No signature calculated, just call the deconvolute method — build_model_immunedeconv","title":"No signature calculated, just call the deconvolute method — build_model_immunedeconv","text":"signature calculated, just call deconvolute method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_immunedeconv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"No signature calculated, just call the deconvolute method — build_model_immunedeconv","text":"","code":"build_model_immunedeconv()"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_omnideconv.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Reference — build_model_omnideconv","title":"Build Reference — build_model_omnideconv","text":"Build Reference","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_omnideconv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Reference — build_model_omnideconv","text":"","code":"build_model_omnideconv(   single_cell_obj,   cell_type_col = \"cell_ontology_class\",   method = NULL,   spatial_obj = NULL,   batch_id_col = NULL,   markers = NULL,   assay_sc = \"counts\",   assay_sp = \"counts\",   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_omnideconv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Reference — build_model_omnideconv","text":"single_cell_obj SingleCellExperiment cell_type_col column containing cell type annotation method select deconvolution method spatial_obj SpatialExperiment batch_id_col column single_cell_obj containing batch_ids markers List marker genes, used bseqsc assay_sc single cell assay use assay_sp spatial assay use ... additional parameters passed selected algorithm","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_omnideconv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Build Reference — build_model_omnideconv","text":"Gene Expression signature NULL, methods export signatures","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_rctd.html","id":null,"dir":"Reference","previous_headings":"","what":"RCTD builds the model internally, please just use the deconvolute method — build_model_rctd","title":"RCTD builds the model internally, please just use the deconvolute method — build_model_rctd","text":"RCTD builds model internally, please just use deconvolute method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_rctd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RCTD builds the model internally, please just use the deconvolute method — build_model_rctd","text":"","code":"build_model_rctd()"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_spatial_dwls.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Model Spatial DWLS — build_model_spatial_dwls","title":"Build Model Spatial DWLS — build_model_spatial_dwls","text":"Build Model Spatial DWLS","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_spatial_dwls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Model Spatial DWLS — build_model_spatial_dwls","text":"","code":"build_model_spatial_dwls(   single_cell_obj,   assay_sc = \"counts\",   marker_method = \"scran\",   topNgenes = 100,   cell_type_col = \"cell_ontology_class\",   dim_method = \"pca\",   cluster_method = \"leiden\",   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_spatial_dwls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Model Spatial DWLS — build_model_spatial_dwls","text":"single_cell_obj SingleCellExperiment assay_sc Single Cell Object assay use marker_method provide list marker genes method calculate markers (scran, gini, mast) topNgenes Number top ranked marker genes use cluster cell_type_col column single_cell_obj containing cell type information dim_method dimension reduction method cluster_method cluster method  use calculating marker genes ... additional paramters","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_spotlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Model SPOTlight — build_model_spotlight","title":"Build Model SPOTlight — build_model_spotlight","text":"Build Model SPOTlight","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_spotlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Model SPOTlight — build_model_spotlight","text":"","code":"build_model_spotlight(   single_cell_obj,   cell_type_col = \"cell_ontology_class\",   spatial_obj,   assay_sc = \"counts\",   assay_sp = \"counts\",   markers = NULL )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/build_model_spotlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Model SPOTlight — build_model_spotlight","text":"single_cell_obj SingleCellExperiment cell_type_col Column cell type information can found spatial_obj SpatialExperiment assay_sc single cell assay use assay_sp spatial assay use markers (Optional) Marker Gene DataFrame, NULL markers calculated 'single_cell_obj' based authors suggestion","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkCol.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if Column exists in object — checkCol","title":"Check if Column exists in object — checkCol","text":"Check Column exists object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkCol.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if Column exists in object — checkCol","text":"","code":"checkCol(object, column)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkCol.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if Column exists in object — checkCol","text":"object SingleCellExperiment SpatialExperiment column column name check existence","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkCol.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if Column exists in object — checkCol","text":"column exists object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkRowColumn.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Rowname/Colname Presence — checkRowColumn","title":"Check Rowname/Colname Presence — checkRowColumn","text":"Check Rowname Column Name existence expression objects","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkRowColumn.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Rowname/Colname Presence — checkRowColumn","text":"","code":"checkRowColumn(object)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkRowColumn.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Rowname/Colname Presence — checkRowColumn","text":"object SingleCellExperiment SpatialExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/checkRowColumn.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Rowname/Colname Presence — checkRowColumn","text":"boolean, TRUE one rownames/colnames NULL","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/check_and_install.html","id":null,"dir":"Reference","previous_headings":"","what":"Checking and installing all dependencies for the specific methods — check_and_install","title":"Checking and installing all dependencies for the specific methods — check_and_install","text":"Checking installing dependencies specific methods","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/check_and_install.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checking and installing all dependencies for the specific methods — check_and_install","text":"","code":"check_and_install(method)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/check_and_install.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checking and installing all dependencies for the specific methods — check_and_install","text":"method name method used","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/convertImmunedeconvMatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Immunedeconv Matrix to match spacedeconv Format — convertImmunedeconvMatrix","title":"Convert Immunedeconv Matrix to match spacedeconv Format — convertImmunedeconvMatrix","text":"Convert Immunedeconv Matrix match spacedeconv Format","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/convertImmunedeconvMatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Immunedeconv Matrix to match spacedeconv Format — convertImmunedeconvMatrix","text":"","code":"convertImmunedeconvMatrix(deconvResult)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/convertImmunedeconvMatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Immunedeconv Matrix to match spacedeconv Format — convertImmunedeconvMatrix","text":"deconvResult immunedeconv result matrix","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/convertImmunedeconvMatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Immunedeconv Matrix to match spacedeconv Format — convertImmunedeconvMatrix","text":"transformed matrix cell types columns","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/convert_to_sce.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Input Files to SingleCellExperiment — convert_to_sce","title":"Convert Input Files to SingleCellExperiment — convert_to_sce","text":"Convert Input Files SingleCellExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/convert_to_sce.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Input Files to SingleCellExperiment — convert_to_sce","text":"","code":"convert_to_sce(obj)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/convert_to_sce.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Input Files to SingleCellExperiment — convert_to_sce","text":"obj object provided user, converted sce","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolution with spacedeconv — deconvolute","title":"Deconvolution with spacedeconv — deconvolute","text":"Perform cell type deconvolution spacedeconv.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolution with spacedeconv — deconvolute","text":"","code":"deconvolute(   spatial_obj,   signature = NULL,   single_cell_obj = NULL,   cell_type_col = \"cell_ontology_class\",   method = NULL,   batch_id_col = NULL,   assay_sc = \"counts\",   assay_sp = \"counts\",   return_object = TRUE,   verbose = FALSE,   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolution with spacedeconv — deconvolute","text":"spatial_obj SpatialExperiment signature Gene Expression Signature single_cell_obj SingleCellExperiment cell_type_col Column name single_cell_obj cell type can found method Deconvolution Method use, see deconvolution_methods() full list available methods batch_id_col column name batch ids single cell object assay_sc single cell assay use computation assay_sp spatial assay use computation return_object Return Object result Table, TRUE = Object verbose display detailed information ... parameters passed selected deconvolution method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deconvolution with spacedeconv — deconvolute","text":"deconvolution result table","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Deconvolution with spacedeconv — deconvolute","text":"","code":"# more examples can be found in the documentation website data(\"spatial_data_2\")  spatial_data_2 <- spacedeconv::normalize(spatial_data_2, method = \"cpm\") #> Loading required package: SpatialExperiment #> Loading required package: SingleCellExperiment #> Loading required package: SummarizedExperiment #> Loading required package: MatrixGenerics #> Loading required package: matrixStats #>  #> Attaching package: ‘MatrixGenerics’ #> The following objects are masked from ‘package:matrixStats’: #>  #>     colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse, #>     colCounts, colCummaxs, colCummins, colCumprods, colCumsums, #>     colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs, #>     colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats, #>     colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds, #>     colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads, #>     colWeightedMeans, colWeightedMedians, colWeightedSds, #>     colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet, #>     rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods, #>     rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps, #>     rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins, #>     rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks, #>     rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars, #>     rowWeightedMads, rowWeightedMeans, rowWeightedMedians, #>     rowWeightedSds, rowWeightedVars #> Loading required package: GenomicRanges #> Loading required package: stats4 #> Loading required package: BiocGenerics #>  #> Attaching package: ‘BiocGenerics’ #> The following object is masked from ‘package:spacedeconv’: #>  #>     normalize #> The following objects are masked from ‘package:stats’: #>  #>     IQR, mad, sd, var, xtabs #> The following objects are masked from ‘package:base’: #>  #>     Filter, Find, Map, Position, Reduce, anyDuplicated, append, #>     as.data.frame, basename, cbind, colnames, dirname, do.call, #>     duplicated, eval, evalq, get, grep, grepl, intersect, is.unsorted, #>     lapply, mapply, match, mget, order, paste, pmax, pmax.int, pmin, #>     pmin.int, rank, rbind, rownames, sapply, setdiff, sort, table, #>     tapply, union, unique, unsplit, which.max, which.min #> Loading required package: S4Vectors #>  #> Attaching package: ‘S4Vectors’ #> The following objects are masked from ‘package:base’: #>  #>     I, expand.grid, unname #> Loading required package: IRanges #> Loading required package: GenomeInfoDb #> Loading required package: Biobase #> Welcome to Bioconductor #>  #>     Vignettes contain introductory material; view with #>     'browseVignettes()'. To cite Bioconductor, see #>     'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'. #>  #> Attaching package: ‘Biobase’ #> The following object is masked from ‘package:MatrixGenerics’: #>  #>     rowMedians #> The following objects are masked from ‘package:matrixStats’: #>  #>     anyMissing, rowMedians #> removing 15 spots with zero expression #> Normalized object using cpm. Note that the normalization is saved in an additional assay.  deconvolution <- spacedeconv::deconvolute(   spatial_obj = spatial_data_2,   method = \"estimate\", ) #>  #> >>> Running estimate #> [1] \"Merged dataset includes 9969 genes (443 mismatched).\" #> [1] \"1 gene set: StromalSignature  overlap= 136\" #> [1] \"2 gene set: ImmuneSignature  overlap= 140\" #> attaching token #> finished deconvolution #> saving results to object"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_card.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute CARD — deconvolute_card","title":"Deconvolute CARD — deconvolute_card","text":"Deconvolute CARD","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_card.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute CARD — deconvolute_card","text":"","code":"deconvolute_card(   single_cell_obj,   spatial_obj,   cell_type_col = \"cell_ontology_class\",   assay_sc = \"counts\",   assay_sp = \"counts\",   batch_id_col = \"orig.ident\",   result_name = \"card\" )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_card.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute CARD — deconvolute_card","text":"single_cell_obj Single Cell Experiment spatial_obj Spatial Experiment cell_type_col column SCE containing cell type information assay_sc assay single_cell_obj use assay_sp assay spatial_obj use batch_id_col batch id column spatialExperiment result_name token identify deconvolution results object, default = \"card\"","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_cell2location.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute Cell2location — deconvolute_cell2location","title":"Deconvolute Cell2location — deconvolute_cell2location","text":"Deconvolute Cell2location","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_cell2location.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute Cell2location — deconvolute_cell2location","text":"","code":"deconvolute_cell2location()"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_immunedeconv.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute Immundeconv — deconvolute_immunedeconv","title":"Deconvolute Immundeconv — deconvolute_immunedeconv","text":"Deconvolute Immundeconv","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_immunedeconv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute Immundeconv — deconvolute_immunedeconv","text":"","code":"deconvolute_immunedeconv(   spatial_obj,   method = NULL,   assay_sp = \"counts\",   result_name = NULL,   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_immunedeconv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute Immundeconv — deconvolute_immunedeconv","text":"spatial_obj SpatialExperiment method deconvolution algorithm assay_sp assay spatial object use result_name token identify deconvolution results object, default = deconvolution method ... parameters passed selected method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_immunedeconv_mouse.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute Immunedeconv mouse — deconvolute_immunedeconv_mouse","title":"Deconvolute Immunedeconv mouse — deconvolute_immunedeconv_mouse","text":"Deconvolute Immunedeconv mouse","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_immunedeconv_mouse.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute Immunedeconv mouse — deconvolute_immunedeconv_mouse","text":"","code":"deconvolute_immunedeconv_mouse(   spatial_obj,   method = NULL,   rmgenes = NULL,   algorithm = NULL,   assay_sp = \"counts\",   result_name = NULL,   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_immunedeconv_mouse.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute Immunedeconv mouse — deconvolute_immunedeconv_mouse","text":"spatial_obj SpatialExperiment method deconvolution algorithm rmgenes genes remove analysis algorithm statistical algorithm SeqImmuCC (ignored methods) assay_sp assay spatial object use result_name token identify deconvolution results object, default = deconvolution method ... additional parameters passed function","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_omnideconv.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute Omnideconv — deconvolute_omnideconv","title":"Deconvolute Omnideconv — deconvolute_omnideconv","text":"Deconvolute Omnideconv","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_omnideconv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute Omnideconv — deconvolute_omnideconv","text":"","code":"deconvolute_omnideconv(   spatial_obj,   signature = NULL,   method = NULL,   single_cell_obj = NULL,   cell_type_col = \"cell_ontology_class\",   batch_id_col = NULL,   assay_sc = \"counts\",   assay_sp = \"counts\",   verbose = FALSE,   result_name = NULL,   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_omnideconv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute Omnideconv — deconvolute_omnideconv","text":"spatial_obj SpatialExperiment signature signature matrix method omnideconv deconvolution method, see omnideconv::deconvolution_methods() details single_cell_obj Needed MOMF Bisque, either matrix cell type annotations cell_type_annotations parameter singleCellExperiment / AnnData cell_type_column_name specifies corresponding column cell type annotation located object cell_type_col column name single_cell_obj cell type information found batch_id_col column name single_cell_obj batch ids can found assay_sc single cell assay use assay_sp spatial assay use verbose Whether produce output console result_name token identify deconvolution results object, default = selected deconvolution method ... Additional parameters, passed selected method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_rctd.html","id":null,"dir":"Reference","previous_headings":"","what":"RCTD Deconvolution — deconvolute_rctd","title":"RCTD Deconvolution — deconvolute_rctd","text":"RCTD Deconvolution","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_rctd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"RCTD Deconvolution — deconvolute_rctd","text":"","code":"deconvolute_rctd(   single_cell_obj,   cell_type_col,   spatial_obj,   assay_sc = \"counts\",   assay_sp = \"counts\",   n_umi_sc = NULL,   n_umi_sp = NULL,   n_cores = NULL,   result_name = \"rctd\" )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_rctd.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"RCTD Deconvolution — deconvolute_rctd","text":"single_cell_obj SingleCellExperiment cell_type_col Column containting cell type annotation spatial_obj SpatialExperiment assay_sc single cell assay use assay_sp spatial assay use n_umi_sc (optional) named list umi counts cell n_umi_sp (optional) named list umi counts spot n_cores Number CPU cores use calculation, NULL = use cores result_name token identify deconvolution results object, default = \"rctd\"","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_spatial_dwls.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute Spatial DWLS — deconvolute_spatial_dwls","title":"Deconvolute Spatial DWLS — deconvolute_spatial_dwls","text":"Deconvolute Spatial DWLS","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_spatial_dwls.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute Spatial DWLS — deconvolute_spatial_dwls","text":"","code":"deconvolute_spatial_dwls(   spatial_obj,   signature,   assay_sp = \"counts\",   result_name = \"spatialdwls\",   ... )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_spatial_dwls.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute Spatial DWLS — deconvolute_spatial_dwls","text":"spatial_obj Spatial Experiment signature Signature assay_sp Assay SpatialExperiment use result_name token identify deconvolution results object, default = \"spatialdwls\" ... additional parameters","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_spotlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Deconvolute SPOTlight — deconvolute_spotlight","title":"Deconvolute SPOTlight — deconvolute_spotlight","text":"Deconvolute SPOTlight","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_spotlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deconvolute SPOTlight — deconvolute_spotlight","text":"","code":"deconvolute_spotlight(   spatial_obj,   model = NULL,   assay_sp = \"counts\",   result_name = \"spotlight\" )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolute_spotlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Deconvolute SPOTlight — deconvolute_spotlight","text":"spatial_obj SpatialExperiment model SPOTlight Model assay_sp spatial assay use computation result_name token identify deconvolution results object, default = \"spotlight\"","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolution_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"List of supported deconvolution methods — deconvolution_methods","title":"List of supported deconvolution methods — deconvolution_methods","text":"List supported deconvolution methods","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolution_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"List of supported deconvolution methods — deconvolution_methods","text":"","code":"deconvolution_methods"},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolution_methods.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"List of supported deconvolution methods — deconvolution_methods","text":"object class character length 31.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/deconvolution_methods.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"List of supported deconvolution methods — deconvolution_methods","text":"Spatial Algorithms RCTD, SPOTlight, CARD, spatialDWLS, Cell2Location Second-generation Algorithms (Omnideconv) AutoGeneS, BayesPrism, Bisque, BSeq-sc, CIBERSORTx, CDSeq, CPM, DWLS, MOMF, MuSiC, Scaden, SCDC First-generation Methods (Immunedeconv) MCPcounter, EPIC, quanTIseq, xCell, CIBERSORT, CIBERSORT (abs.), TIMER, ConsensusTME, ABIS, ESTIMATE First-generation Mouse Methods (Immunedeconv) mMCPcounter, seqImmuCC, DCQ, BASE object named vector. names correspond display name method, values internal name.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/doGiottoWorkflow.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Giotto Workflow of Normalization, HVG, Dimension Reduction and Clustering — doGiottoWorkflow","title":"Perform Giotto Workflow of Normalization, HVG, Dimension Reduction and Clustering — doGiottoWorkflow","text":"Perform Giotto Workflow Normalization, HVG, Dimension Reduction Clustering","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/doGiottoWorkflow.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Giotto Workflow of Normalization, HVG, Dimension Reduction and Clustering — doGiottoWorkflow","text":"","code":"doGiottoWorkflow(   obj,   calculateHVG = TRUE,   dim_method = \"pca\",   cluster_method = \"leiden\" )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/doGiottoWorkflow.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Giotto Workflow of Normalization, HVG, Dimension Reduction and Clustering — doGiottoWorkflow","text":"obj Giotto Object calculateHVG Wheter calculate HVG dim_method dimension reduction method use: pca, tsne, umap cluster_method cluster method use c(leiden, kmeans, hclust, louvain)","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMarkersSPOTlight.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate Markers — getMarkersSPOTlight","title":"Calculate Markers — getMarkersSPOTlight","text":"Calculate Markers","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMarkersSPOTlight.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate Markers — getMarkersSPOTlight","text":"","code":"getMarkersSPOTlight(single_cell_obj, cell_type_col = \"cell_ontology_class\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMarkersSPOTlight.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate Markers — getMarkersSPOTlight","text":"single_cell_obj SingleCellExperiment cell_type_col Column containing cell type Procedure reflects suggestions SPOTlight authors, however, also state ways calculate markers","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMatricesFromSCE.html","id":null,"dir":"Reference","previous_headings":"","what":"get matrices from SingleCellExperiment — getMatricesFromSCE","title":"get matrices from SingleCellExperiment — getMatricesFromSCE","text":"get matrices SingleCellExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMatricesFromSCE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get matrices from SingleCellExperiment — getMatricesFromSCE","text":"","code":"getMatricesFromSCE(single_cell_object, cell_type_col = \"cell_ontology_class\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMatricesFromSCE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get matrices from SingleCellExperiment — getMatricesFromSCE","text":"single_cell_object SingleCellExperiment cell_type_col column containing cell type","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/getMatricesFromSCE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"get matrices from SingleCellExperiment — getMatricesFromSCE","text":"list containing expression matrix cell type annotation vector","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_hex_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Hex Polygon Geometry — get_hex_polygon","title":"Build Hex Polygon Geometry — get_hex_polygon","text":"Build Hex Polygon Geometry","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_hex_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Hex Polygon Geometry — get_hex_polygon","text":"","code":"get_hex_polygon(x, y, dist, offset_rotation = FALSE)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_hex_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Hex Polygon Geometry — get_hex_polygon","text":"x coordinate y coordinate dist distance hexagons offset_rotation correct hex orientation rotated visium image","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_polygon_geometry.html","id":null,"dir":"Reference","previous_headings":"","what":"Build Full Hexagon Set for provided spots — get_polygon_geometry","title":"Build Full Hexagon Set for provided spots — get_polygon_geometry","text":"Build Full Hexagon Set provided spots","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_polygon_geometry.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Build Full Hexagon Set for provided spots — get_polygon_geometry","text":"","code":"get_polygon_geometry(grid, dist, offset_rotation = FALSE)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_polygon_geometry.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Build Full Hexagon Set for provided spots — get_polygon_geometry","text":"grid Spot coordinates df format, extracted SpatialExperiment dist distance spots offset_rotation correct hex orientation rotated visium image","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_results_from_object.html","id":null,"dir":"Reference","previous_headings":"","what":"get deconvolution results from object — get_results_from_object","title":"get deconvolution results from object — get_results_from_object","text":"get deconvolution results object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_results_from_object.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"get deconvolution results from object — get_results_from_object","text":"","code":"get_results_from_object(spatial_obj)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/get_results_from_object.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"get deconvolution results from object — get_results_from_object","text":"spatial_obj SpatialExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/init_python.html","id":null,"dir":"Reference","previous_headings":"","what":"Initiates python environment — init_python","title":"Initiates python environment — init_python","text":"Initiates python environment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/init_python.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Initiates python environment — init_python","text":"","code":"init_python(python = NULL)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/init_python.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Initiates python environment — init_python","text":"python (optional) python used please indicate binaries","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/make_baseplot.html","id":null,"dir":"Reference","previous_headings":"","what":"Render spatial hex plot — make_baseplot","title":"Render spatial hex plot — make_baseplot","text":"Render spatial hex plot","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/make_baseplot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Render spatial hex plot — make_baseplot","text":"","code":"make_baseplot(   spe,   df,   to_plot,   palette = \"Mako\",   transform_scale = NULL,   sample_id = \"sample01\",   reverse_palette = FALSE,   image_id = \"lowres\",   show_image = FALSE,   palette_type = \"sequential\",   offset_rotation = FALSE,   spot_size = 1.17,   limits = NULL,   smooth = FALSE,   smoothing_factor = 1.5,   title_size = 30,   font_size = 20,   legend_size = 40,   density = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/make_baseplot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Render spatial hex plot — make_baseplot","text":"spe SpatialExperiment deconvolution results df containing annotation plotted to_plot column df plot palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" sample_id sample SpatialExperiment plotted reverse_palette reverse color palette image_id image id background image show_image whether show spatial image palette_type \"discrete\", \"sequential\", \"diverging\" offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limits smooth whether smooth plot smoothing_factor kernel size factor (multiples spot distance) title_size font size title font_size font size legend legend_size legend size points density whether display density distribution next spatial plot","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/normalize.html","id":null,"dir":"Reference","previous_headings":"","what":"Normalize Expression Object — normalize","title":"Normalize Expression Object — normalize","text":"Normalize Expression Object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/normalize.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Normalize Expression Object — normalize","text":"","code":"normalize(object, method = \"cpm\")"},{"path":"https://omnideconv.github.io/spacedeconv/reference/normalize.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Normalize Expression Object — normalize","text":"object SingleCellExperiment method normalization method, (\"cpm\", \"logcpm\")","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_cells_per_spot.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot Cells per Spot — plot_cells_per_spot","title":"Plot Cells per Spot — plot_cells_per_spot","text":"Plot Cells per Spot","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_cells_per_spot.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot Cells per Spot — plot_cells_per_spot","text":"","code":"plot_cells_per_spot(   spatial_obj,   plot_type = \"spatial\",   threshold = 0.01,   palette = \"Mako\",   transform_scale = NULL,   reverse_palette = FALSE,   sample_id = \"sample01\",   image_id = \"lowres\",   show_image = FALSE,   offset_rotation = FALSE,   spot_size = 1.17,   limits = NULL,   title_size = 30,   font_size = 20,   legend_size = 40,   density = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_cells_per_spot.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot Cells per Spot — plot_cells_per_spot","text":"spatial_obj SpatialExperiment containing deconvolution results plot_type bar chart spatial (bar, spatial) threshold threshold presence/absence, single value vector length nrow(spatial_obj) palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" reverse_palette reverse color palette sample_id sample SpatialExperiment plotted image_id image SpatialExperiment background annotation show_image whether show histology image background offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limit title_size font size title font_size font size legend legend_size size legend points density whether display density distribution next spatial plot","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_cells_per_spot.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot Cells per Spot — plot_cells_per_spot","text":"hex plot containing unique cell counts per spot","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_cells_per_spot.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot Cells per Spot — plot_cells_per_spot","text":"","code":"data(\"spatial_data_1\") deconv <- spacedeconv::deconvolute(spatial_data_1, method = \"estimate\") #> removing 49 spots with zero expression #>  #> >>> Running estimate #> [1] \"Merged dataset includes 9969 genes (443 mismatched).\" #> [1] \"1 gene set: StromalSignature  overlap= 136\" #> [1] \"2 gene set: ImmuneSignature  overlap= 140\" #> attaching token #> finished deconvolution #> saving results to object spacedeconv::plot_cells_per_spot(deconv) #> Warning: argument is not numeric or logical: returning NA #> Picking joint bandwidth of 0.693 #> Warning: Removed 2665 rows containing missing values (`geom_vline()`)."},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot deconvolution results — plot_celltype","title":"Function to plot deconvolution results — plot_celltype","text":"Generate Hex Plot SpatialExperiment containing deconvolution results","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot deconvolution results — plot_celltype","text":"","code":"plot_celltype(   spe,   cell_type = NULL,   palette = \"Mako\",   transform_scale = NULL,   sample_id = \"sample01\",   image_id = \"lowres\",   reverse_palette = FALSE,   show_image = FALSE,   palette_type = \"sequential\",   offset_rotation = FALSE,   spot_size = 1.17,   limits = NULL,   smooth = FALSE,   smoothing_factor = 1.5,   title_size = 30,   font_size = 20,   legend_size = 40,   density = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot deconvolution results — plot_celltype","text":"spe deconvolution result Form SpatialExperiment cell_type one celltype plot palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" sample_id sample id plot, default: \"sample01\" image_id image plot, default: \"lowres\" reverse_palette reverse color palette show_image logical, whether display image, default = TRUE palette_type discrete, sequential diverging offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limits smooth whether smooth plot smoothing_factor kernel size factor (multiples spot distance) title_size font size title font_size font size legend legend_size legend size points density whether display density distribution next spatial plot","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot deconvolution results — plot_celltype","text":"plot cell type fractions","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot deconvolution results — plot_celltype","text":"","code":"data(\"spatial_data_2\") deconv <- spacedeconv::deconvolute(spatial_data_2, method = \"estimate\") #> removing 15 spots with zero expression #>  #> >>> Running estimate #> [1] \"Merged dataset includes 9969 genes (443 mismatched).\" #> [1] \"1 gene set: StromalSignature  overlap= 136\" #> [1] \"2 gene set: ImmuneSignature  overlap= 140\" #> attaching token #> finished deconvolution #> saving results to object spacedeconv::plot_celltype(deconv, cell_type = \"estimate_immune.score\") #> Picking joint bandwidth of 98"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype_presence.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot celltype presence absence — plot_celltype_presence","title":"Plot celltype presence absence — plot_celltype_presence","text":"Plot celltype presence absence","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype_presence.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot celltype presence absence — plot_celltype_presence","text":"","code":"plot_celltype_presence(   spe,   cell_type = NULL,   threshold = 0.01,   palette = \"Mako\",   transform_scale = NULL,   sample_id = \"sample01\",   image_id = \"lowres\",   reverse_palette = FALSE,   show_image = FALSE,   offset_rotation = FALSE,   spot_size = 1.17,   limits = NULL,   smooth = FALSE,   smoothing_factor = 1.5,   title_size = 30,   font_size = 20,   legend_size = 40 )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype_presence.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot celltype presence absence — plot_celltype_presence","text":"spe deconvolution result Form SpatialExperiment cell_type celltype plot threshold fraction threshold, everything counted \"detected\" palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" sample_id sample id plot, default: \"sample01\" image_id image plot, default: \"lowres\" reverse_palette reverse color palette show_image logical, wether display image, default = TRUE offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limits smooth whether smooth plot smoothing_factor kernel size factor (multiples spot distance) title_size font size title font_size font size legend legend_size legend size points","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_celltype_presence.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot celltype presence absence — plot_celltype_presence","text":"plot celltypes presence/absence using threshold","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_comparison.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot celltype fraction comparison — plot_comparison","title":"Plot celltype fraction comparison — plot_comparison","text":"Plot celltype fraction comparison","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_comparison.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot celltype fraction comparison — plot_comparison","text":"","code":"plot_comparison(   spe,   cell_type_1 = NULL,   cell_type_2 = NULL,   palette = \"Mako\",   transform_scale = NULL,   sample_id = \"sample01\",   image_id = \"lowres\",   reverse_palette = FALSE,   show_image = FALSE,   offset_rotation = FALSE,   spot_size = 1.17,   limits = NULL,   smooth = FALSE,   smoothing_factor = 1.5,   title_size = 30,   font_size = 20,   legend_size = 40,   palette_type = \"diverging\",   density = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_comparison.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot celltype fraction comparison — plot_comparison","text":"spe deconvolution result Form SpatialExperiment cell_type_1 celltype plot cell_type_2 celltype plot palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" sample_id sample id plot, default: \"sample01\" image_id image plot, default: \"lowres\" reverse_palette reverse color palette show_image logical, wether display image, default = TRUE offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limits smooth whether smooth plot smoothing_factor kernel size factor (multiples spot distance) title_size font size title font_size font size legend legend_size legend size points palette_type \"discrete\", \"sequenatial\", \"diverging\" density whether display density distribution next spatial plot","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_comparison.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot celltype fraction comparison — plot_comparison","text":"plot celltypes presence/absence using threshold","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_most_abundant.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot deconvolution results — plot_most_abundant","title":"Function to plot deconvolution results — plot_most_abundant","text":"Generate Hex Plot SpatialExperiment containing abundant cell types","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_most_abundant.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot deconvolution results — plot_most_abundant","text":"","code":"plot_most_abundant(   spe,   method = NULL,   cell_type = NULL,   remove = NULL,   palette = \"Mako\",   sample_id = \"sample01\",   image_id = \"lowres\",   reverse_palette = FALSE,   show_image = FALSE,   offset_rotation = FALSE,   spot_size = 1.17,   title_size = 30,   font_size = 20,   legend_size = 40,   density = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_most_abundant.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot deconvolution results — plot_most_abundant","text":"spe deconvolution result Form SpatialExperiment method select results displayed cell_type one celltype plot, NULL remove vector cell types removed plot palette colorspace palette (sequential) sample_id sample id plot, default: \"sample01\" image_id image plot, default: \"lowres\" reverse_palette reverse color palette show_image logical, whether display image, default = TRUE offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size title_size font size title font_size font size legend legend_size legend size points density whether display density distribution next spatial plot","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_most_abundant.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot deconvolution results — plot_most_abundant","text":"plot cell type fractions","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_umi_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Function to plot deconvolution results — plot_umi_count","title":"Function to plot deconvolution results — plot_umi_count","text":"Generate Hex Plot SpatialExperiment containing UMI counts","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_umi_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Function to plot deconvolution results — plot_umi_count","text":"","code":"plot_umi_count(   spe,   palette = \"Mako\",   transform_scale = NULL,   sample_id = \"sample01\",   image_id = \"lowres\",   reverse_palette = FALSE,   show_image = FALSE,   offset_rotation = FALSE,   spot_size = 1.17,   limits = NULL,   smooth = FALSE,   smoothing_factor = 1.5,   title_size = 30,   font_size = 20,   legend_size = 40,   density = TRUE )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_umi_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Function to plot deconvolution results — plot_umi_count","text":"spe deconvolution result Form SpatialExperiment palette colorspace palette (sequential) transform_scale data transform_scaleation use, \"log\" sample_id sample id plot, default: \"sample01\" image_id image plot, default: \"lowres\" reverse_palette reverse color palette show_image logical, wether display image, default = TRUE offset_rotation correct hex orientation rotated visium image spot_size increase (>1) decrease (<1) hex size limits vector color scale limits smooth whether smooth plot smoothing_factor kernel size factor (multiples spot distance) title_size font size title font_size font size legend legend_size legend size points density whether display density distribution next spatial plot","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_umi_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Function to plot deconvolution results — plot_umi_count","text":"plot cell type fractions","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/plot_umi_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Function to plot deconvolution results — plot_umi_count","text":"","code":"data(\"spatial_data_3\") deconv <- spacedeconv::deconvolute(spatial_data_3, method = \"estimate\") #> removing 5 spots with zero expression #>  #> >>> Running estimate #> [1] \"Merged dataset includes 9969 genes (443 mismatched).\" #> [1] \"1 gene set: StromalSignature  overlap= 136\" #> [1] \"2 gene set: ImmuneSignature  overlap= 140\" #> attaching token #> finished deconvolution #> saving results to object plot_umi_count(deconv) #> Picking joint bandwidth of 2040"},{"path":"https://omnideconv.github.io/spacedeconv/reference/python_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if python is available in environment — python_available","title":"Checks if python is available in environment — python_available","text":"Checks python available environment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/python_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if python is available in environment — python_available","text":"","code":"python_available()"},{"path":"https://omnideconv.github.io/spacedeconv/reference/python_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if python is available in environment — python_available","text":"boolean","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/removeZeroExpression.html","id":null,"dir":"Reference","previous_headings":"","what":"Remove Spots with zero expression — removeZeroExpression","title":"Remove Spots with zero expression — removeZeroExpression","text":"function removes spots/columns zero expression detected. spots might result errors computation","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/removeZeroExpression.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Remove Spots with zero expression — removeZeroExpression","text":"","code":"removeZeroExpression(object)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/removeZeroExpression.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Remove Spots with zero expression — removeZeroExpression","text":"object SummarizedExperiment related datatypes","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/removeZeroExpression.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Remove Spots with zero expression — removeZeroExpression","text":"Expression Object without zero columns","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/required_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"The dependencies for each method — required_packages","title":"The dependencies for each method — required_packages","text":"dependencies method","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/required_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"The dependencies for each method — required_packages","text":"","code":"required_packages"},{"path":"https://omnideconv.github.io/spacedeconv/reference/required_packages.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"The dependencies for each method — required_packages","text":"object class list length 11.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/set_cibersort_binary.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Path to CIBERSORT R script (CIBERSORT.R) — set_cibersort_binary","title":"Set Path to CIBERSORT R script (CIBERSORT.R) — set_cibersort_binary","text":"CIBERSORT freely available academic users. license binary can obtained https://cibersort.stanford.edu.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/set_cibersort_binary.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Path to CIBERSORT R script (CIBERSORT.R) — set_cibersort_binary","text":"","code":"set_cibersort_binary(path)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/set_cibersort_binary.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Path to CIBERSORT R script (CIBERSORT.R) — set_cibersort_binary","text":"path path cibersort R script.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/set_cibersort_mat.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Path to CIBERSORT matrix file (LM22.txt) — set_cibersort_mat","title":"Set Path to CIBERSORT matrix file (LM22.txt) — set_cibersort_mat","text":"CIBERSORT freely available academic users. license binary can obtained https://cibersort.stanford.edu.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/set_cibersort_mat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Path to CIBERSORT matrix file (LM22.txt) — set_cibersort_mat","text":"","code":"set_cibersort_mat(path)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/set_cibersort_mat.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Path to CIBERSORT matrix file (LM22.txt) — set_cibersort_mat","text":"path path cibersort matrix.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/seurat_to_spatialexperiment.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert Seurat to SpatialExperiment — seurat_to_spatialexperiment","title":"Convert Seurat to SpatialExperiment — seurat_to_spatialexperiment","text":"Convert Seurat SpatialExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/seurat_to_spatialexperiment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert Seurat to SpatialExperiment — seurat_to_spatialexperiment","text":"","code":"seurat_to_spatialexperiment(seurat)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/seurat_to_spatialexperiment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert Seurat to SpatialExperiment — seurat_to_spatialexperiment","text":"seurat Seurat Object","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/seurat_to_spatialexperiment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert Seurat to SpatialExperiment — seurat_to_spatialexperiment","text":"SpatialExperiment","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example single cell dataset 1 from Wu et al. — single_cell_data_1","title":"Example single cell dataset 1 from Wu et al. — single_cell_data_1","text":"single cell expression subset 5789 cells sample CID4290. Cell type annotation available three different resolutions.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example single cell dataset 1 from Wu et al. — single_cell_data_1","text":"","code":"single_cell_data_1"},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example single cell dataset 1 from Wu et al. — single_cell_data_1","text":"SingleCellExperiment 29733 rows 5789 columns","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example single cell dataset 1 from Wu et al. — single_cell_data_1","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example single cell dataset 2 from Wu et al. — single_cell_data_2","title":"Example single cell dataset 2 from Wu et al. — single_cell_data_2","text":"single cell expression subset 1564 cells sample CID4465. Cell type annotation available three different resolutions.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example single cell dataset 2 from Wu et al. — single_cell_data_2","text":"","code":"single_cell_data_2"},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example single cell dataset 2 from Wu et al. — single_cell_data_2","text":"SingleCellExperiment 29733 rows 1564 columns","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example single cell dataset 2 from Wu et al. — single_cell_data_2","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_3.html","id":null,"dir":"Reference","previous_headings":"","what":"Example single cell dataset 3 from Wu et al. — single_cell_data_3","title":"Example single cell dataset 3 from Wu et al. — single_cell_data_3","text":"single cell expression subset 7986 cells sample CID44971. Cell type annotation available three different resolutions.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example single cell dataset 3 from Wu et al. — single_cell_data_3","text":"","code":"single_cell_data_3"},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example single cell dataset 3 from Wu et al. — single_cell_data_3","text":"SingleCellExperiment 29733 rows 7986 columns","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example single cell dataset 3 from Wu et al. — single_cell_data_3","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_4.html","id":null,"dir":"Reference","previous_headings":"","what":"Example single cell dataset 4 from Wu et al. — single_cell_data_4","title":"Example single cell dataset 4 from Wu et al. — single_cell_data_4","text":"single cell expression subset 3961 cells sample CID4535 Cell type annotation available three different resolutions.","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example single cell dataset 4 from Wu et al. — single_cell_data_4","text":"","code":"single_cell_data_4"},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example single cell dataset 4 from Wu et al. — single_cell_data_4","text":"SingleCellExperiment 29733 rows 3961 columns","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/single_cell_data_4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example single cell dataset 4 from Wu et al. — single_cell_data_4","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/smooth_celltype.html","id":null,"dir":"Reference","previous_headings":"","what":"Smooth spot annotation — smooth_celltype","title":"Smooth spot annotation — smooth_celltype","text":"Smooth spot annotation","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/smooth_celltype.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Smooth spot annotation — smooth_celltype","text":"","code":"smooth_celltype(df, spot_distance, smoothing_factor = 1.5, cell_type = NULL)"},{"path":"https://omnideconv.github.io/spacedeconv/reference/smooth_celltype.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Smooth spot annotation — smooth_celltype","text":"df DataFrame containing spot coordinates value smoothed spot_distance distance two spots smoothing_factor multiplied spot distance find close spots cell_type value smoothed","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spacedeconv_pkg.html","id":null,"dir":"Reference","previous_headings":"","what":"spacedeconv — spacedeconv_pkg","title":"spacedeconv — spacedeconv_pkg","text":"spacedeconv Unified R Interface spatial transcriptomics deconvolution methods","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_1.html","id":null,"dir":"Reference","previous_headings":"","what":"Example spatial dataset 1 from Wu et al. — spatial_data_1","title":"Example spatial dataset 1 from Wu et al. — spatial_data_1","text":"SpatialExperiment containing total 2714 spots sample CID4290","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_1.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example spatial dataset 1 from Wu et al. — spatial_data_1","text":"","code":"spatial_data_1"},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_1.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example spatial dataset 1 from Wu et al. — spatial_data_1","text":"SpatialExperiment 36601 genes 2714 spots","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_1.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example spatial dataset 1 from Wu et al. — spatial_data_1","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_2.html","id":null,"dir":"Reference","previous_headings":"","what":"Example spatial dataset 2 from Wu et al. — spatial_data_2","title":"Example spatial dataset 2 from Wu et al. — spatial_data_2","text":"SpatialExperiment containing total 1310 spots sample CID4465","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example spatial dataset 2 from Wu et al. — spatial_data_2","text":"","code":"spatial_data_2"},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example spatial dataset 2 from Wu et al. — spatial_data_2","text":"SpatialExperiment 36601 genes 1310 spots","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_2.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example spatial dataset 2 from Wu et al. — spatial_data_2","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_3.html","id":null,"dir":"Reference","previous_headings":"","what":"Example spatial dataset 3 from Wu et al. — spatial_data_3","title":"Example spatial dataset 3 from Wu et al. — spatial_data_3","text":"SpatialExperiment containing total 1322 spots sample CID44971","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_3.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example spatial dataset 3 from Wu et al. — spatial_data_3","text":"","code":"spatial_data_3"},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_3.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example spatial dataset 3 from Wu et al. — spatial_data_3","text":"SpatialExperiment 36601 genes 1322 spots","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_3.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example spatial dataset 3 from Wu et al. — spatial_data_3","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_4.html","id":null,"dir":"Reference","previous_headings":"","what":"Example spatial dataset 4 from Wu et al. — spatial_data_4","title":"Example spatial dataset 4 from Wu et al. — spatial_data_4","text":"SpatialExperiment containing total 1431 spots sample CID4535","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_4.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example spatial dataset 4 from Wu et al. — spatial_data_4","text":"","code":"spatial_data_4"},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_4.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example spatial dataset 4 from Wu et al. — spatial_data_4","text":"SpatialExperiment 36601 genes 1431 spots","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/spatial_data_4.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"Example spatial dataset 4 from Wu et al. — spatial_data_4","text":"Wu SZ, Al-Eryani G, Roden DL, Junankar S et al. single-cell spatially resolved atlas human breast cancers. Nat Genet 2021 Sep;53(9):1334-1347. PMID: 34493872","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/subsetSCE.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset Single Cell Experiment — subsetSCE","title":"Subset Single Cell Experiment — subsetSCE","text":"Subset SingleCellExperiment reduce number cells","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/subsetSCE.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset Single Cell Experiment — subsetSCE","text":"","code":"subsetSCE(   sce,   cell_type_col = \"celltype_major\",   scenario = \"even\",   ncells = 1000,   notEnough = \"asis\" )"},{"path":"https://omnideconv.github.io/spacedeconv/reference/subsetSCE.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Subset Single Cell Experiment — subsetSCE","text":"sce SingleCellExperiment cell type annotation cell_type_col name colData column containing cell type information scenario fraction celltype present subsampled dataset? ncells number cells total, defaults 1000 notEnough enough cells available c(\"remove\", \"asis\")","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/subsetSCE.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Subset Single Cell Experiment — subsetSCE","text":"singleCellExperiment ","code":""},{"path":"https://omnideconv.github.io/spacedeconv/reference/subsetSCE.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Subset Single Cell Experiment — subsetSCE","text":"","code":"data(\"single_cell_data_1\") sce <- subsetSCE(   single_cell_data_1,   cell_type_col = \"celltype_major\",   scenario = \"even\",   ncells = 100 ) #> extracting up to 100 cells #> Using 96 cells"}]
